# Job Scheduling
def job_scheduling():
    n = int(input("Enter the number of jobs: "))
    jobs = []
    for i in range(n):
        name = input(f"Enter the name of job {i + 1}: ")
        deadline = int(input(f"Enter the deadline for job {i + 1}: "))
        profit = int(input(f"Enter the profit for job {i + 1}: "))
        jobs.append((name, deadline, profit))
    
    jobs.sort(key=lambda x: x[2], reverse=True)
    
    schedule = [False] * (max(jobs, key=lambda x: x[1])[1] + 1)
    total_profit = 0
    job_sequence = []
    
    for job in jobs:
        for i in range(job[1], 0, -1):
            if not schedule[i]:
                schedule[i] = True
                total_profit += job[2]
                job_sequence.append(job[0])
                break
    
    print("Job sequence:", " -> ".join(job_sequence))
    print("Total profit:", total_profit)

job_scheduling()

# Selection Sort
def selection_sort(arr):
    n = len(arr)
    
    for i in range(n-1):
        min_index = i
        
        for j in range(i+1, n):
            if arr[j] < arr[min_index]:
                min_index = j
        
        arr[i], arr[min_index] = arr[min_index], arr[i]
    
    return arr


def main():
    # Get user input for the list of numbers
    numbers = input("Enter a list of numbers, separated by spaces: ").split()
    
    # Convert the input strings to integers
    numbers = [int(num) for num in numbers]
    
    # Call the selection sort function
    sorted_numbers = selection_sort(numbers)
    
    # Print the sorted list
    print("Sorted list:", sorted_numbers)


if __name__ == "__main__":
    main()
